import easyocr
import cv2
import numpy as np
from PIL import Image, ImageDraw, ImageFont
import matplotlib.pyplot as plt

def create_test_images():
    """–°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –∏–º–∏—Ç–∏—Ä—É—é—â–∏–µ –±–∞–Ω–∫–æ–≤—Å–∫–∏–µ —Å–∫—Ä–∏–Ω—à–æ—Ç—ã"""
    
    # –°–æ–∑–¥–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å —Ä–∞–∑–Ω—ã–º–∏ —Å—Ç–∏–ª—è–º–∏ —Ç–µ–∫—Å—Ç–∞ (–∫–∞–∫ –≤ –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è—Ö)
    img = Image.new('RGB', (400, 300), color='white')
    draw = ImageDraw.Draw(img)
    
    # –ò–º–∏—Ç–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å—Ç–∏–ª–∏ —Ç–µ–∫—Å—Ç–∞, –∫–æ—Ç–æ—Ä—ã–µ –≤—Å—Ç—Ä–µ—á–∞—é—Ç—Å—è –≤ –±–∞–Ω–∫–∞—Ö
    texts = [
        ("–ë–∞–ª–∞–Ω—Å:", (50, 50), (0, 0, 0), 24),
        ("123 456,78 ‚ÇΩ", (50, 80), (0, 100, 0), 32),  # –ó–µ–ª–µ–Ω—ã–π —Ü–≤–µ—Ç –¥–ª—è –±–∞–ª–∞–Ω—Å–∞
        ("–î–æ—Å—Ç—É–ø–Ω–æ:", (50, 130), (100, 100, 100), 20),
        ("98 765,43 ‚ÇΩ", (50, 160), (0, 0, 0), 28),
        ("–°–±–µ—Ä–±–∞–Ω–∫", (250, 50), (0, 50, 150), 22),  # –õ–æ–≥–æ—Ç–∏–ø –±–∞–Ω–∫–∞
        ("–ö–∞—Ä—Ç–∞ ****1234", (250, 80), (80, 80, 80), 18),
        ("–û–±–Ω–æ–≤–ª–µ–Ω–æ: 15.12.2024", (50, 220), (120, 120, 120), 16),
        ("15:30:45", (50, 240), (120, 120, 120), 16)
    ]
    
    for text, pos, color, size in texts:
        try:
            # –ü—ã—Ç–∞–µ–º—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–π —à—Ä–∏—Ñ—Ç
            font = ImageFont.truetype("/System/Library/Fonts/Arial.ttf", size)
        except:
            try:
                font = ImageFont.truetype("/System/Library/Fonts/Helvetica.ttc", size)
            except:
                font = ImageFont.load_default()
        
        draw.text(pos, text, fill=color, font=font)
    
    img.save('test_bank_screen.png')
    return 'test_bank_screen.png'

def test_easyocr(image_path):
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º EasyOCR –Ω–∞ —Å–æ–∑–¥–∞–Ω–Ω–æ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏"""
    print("–¢–µ—Å—Ç–∏—Ä—É–µ–º EasyOCR...")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º EasyOCR —Å —Ä—É—Å—Å–∫–∏–º –∏ –∞–Ω–≥–ª–∏–π—Å–∫–∏–º —è–∑—ã–∫–∞–º–∏
    reader = easyocr.Reader(['ru', 'en'])
    
    # –ß–∏—Ç–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    results = reader.readtext(image_path)
    
    print("\n–†–µ–∑—É–ª—å—Ç–∞—Ç—ã EasyOCR:")
    print("-" * 50)
    
    extracted_text = []
    for (bbox, text, confidence) in results:
        print(f"–¢–µ–∫—Å—Ç: '{text}' | –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {confidence:.2f}")
        extracted_text.append(text.lower())
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º, –Ω–∞—à–ª–∏ –ª–∏ –º—ã –±–∞–ª–∞–Ω—Å
    balance_keywords = ['–±–∞–ª–∞–Ω—Å', 'balance', '‚ÇΩ', '—Ä—É–±', '—Ä—É–±–ª—å', '—Ä—É–±–ª–µ–π']
    found_balance = False
    
    for text in extracted_text:
        for keyword in balance_keywords:
            if keyword in text:
                found_balance = True
                break
    
    print("\n" + "=" * 50)
    if found_balance:
        print("‚úÖ –£–°–ü–ï–•: –ù–∞–π–¥–µ–Ω —Ç–µ–∫—Å—Ç, –ø–æ—Ö–æ–∂–∏–π –Ω–∞ –±–∞–ª–∞–Ω—Å!")
    else:
        print("‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ë–∞–ª–∞–Ω—Å –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    return results, found_balance

def test_alternative_ocr():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ OCR —Ä–µ—à–µ–Ω–∏—è"""
    print("\n" + "=" * 60)
    print("–ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ù–´–ï OCR –†–ï–®–ï–ù–ò–Ø:")
    print("=" * 60)
    
    alternatives = [
        {
            "name": "Tesseract OCR",
            "description": "–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π, –Ω–æ —Ç—Ä–µ–±—É–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏",
            "pros": ["–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π", "–•–æ—Ä–æ—à–æ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å —Ç–µ–∫—Å—Ç–æ–º", "–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã–π"],
            "cons": ["–°–ª–æ–∂–Ω–µ–µ –≤ —É—Å—Ç–∞–Ω–æ–≤–∫–µ", "–ú–µ–¥–ª–µ–Ω–Ω–µ–µ EasyOCR"],
            "cost": "–ë–µ—Å–ø–ª–∞—Ç–Ω–æ"
        },
        {
            "name": "Google Cloud Vision API",
            "description": "–ü–ª–∞—Ç–Ω—ã–π, –Ω–æ –æ—á–µ–Ω—å —Ç–æ—á–Ω—ã–π",
            "pros": ["–û—á–µ–Ω—å –≤—ã—Å–æ–∫–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å", "–†–∞–±–æ—Ç–∞–µ—Ç —Å –ª—é–±—ã–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏", "–ü—Ä–æ—Å—Ç–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è"],
            "cons": ["–ü–ª–∞—Ç–Ω—ã–π ($1.50 –∑–∞ 1000 –∑–∞–ø—Ä–æ—Å–æ–≤)", "–¢—Ä–µ–±—É–µ—Ç Google –∞–∫–∫–∞—É–Ω—Ç"],
            "cost": "$1.50 –∑–∞ 1000 –∑–∞–ø—Ä–æ—Å–æ–≤"
        },
        {
            "name": "Azure Computer Vision",
            "description": "–ü–ª–∞—Ç–Ω—ã–π, —Ö–æ—Ä–æ—à–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å",
            "pros": ["–í—ã—Å–æ–∫–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å", "–•–æ—Ä–æ—à–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è", "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Microsoft —ç–∫–æ—Å–∏—Å—Ç–µ–º–æ–π"],
            "cons": ["–ü–ª–∞—Ç–Ω—ã–π ($1.00 –∑–∞ 1000 –∑–∞–ø—Ä–æ—Å–æ–≤)", "–¢—Ä–µ–±—É–µ—Ç Azure –∞–∫–∫–∞—É–Ω—Ç"],
            "cost": "$1.00 –∑–∞ 1000 –∑–∞–ø—Ä–æ—Å–æ–≤"
        },
        {
            "name": "EasyOCR + AI –¥–æ—Ä–∞–±–æ—Ç–∫–∞",
            "description": "–ì–∏–±—Ä–∏–¥–Ω—ã–π –ø–æ–¥—Ö–æ–¥",
            "pros": ["–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π OCR", "AI —É–ª—É—á—à–∞–µ—Ç —Ç–æ—á–Ω–æ—Å—Ç—å", "–ì–∏–±–∫–æ—Å—Ç—å"],
            "cons": ["–°–ª–æ–∂–Ω–µ–µ –≤ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏", "–ú–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–¥–ª–µ–Ω–Ω–µ–µ"],
            "cost": "–ë–µ—Å–ø–ª–∞—Ç–Ω–æ + –≤–æ–∑–º–æ–∂–Ω—ã–µ AI API"
        }
    ]
    
    for alt in alternatives:
        print(f"\nüîç {alt['name']}")
        print(f"   –û–ø–∏—Å–∞–Ω–∏–µ: {alt['description']}")
        print(f"   –ü–ª—é—Å—ã: {', '.join(alt['pros'])}")
        print(f"   –ú–∏–Ω—É—Å—ã: {', '.join(alt['cons'])}")
        print(f"   –°—Ç–æ–∏–º–æ—Å—Ç—å: {alt['cost']}")

if __name__ == "__main__":
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï OCR –î–õ–Ø –ë–ê–ù–ö–û–í–°–ö–ò–• –°–ö–†–ò–ù–®–û–¢–û–í")
    print("=" * 60)
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    image_path = create_test_images()
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {image_path}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º EasyOCR
    results, found_balance = test_easyocr(image_path)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã
    test_alternative_ocr()
    
    print("\n" + "=" * 60)
    print("–†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø:")
    if found_balance:
        print("EasyOCR –ø–æ–∫–∞–∑–∞–ª —Ö–æ—Ä–æ—à–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã. –ú–æ–∂–Ω–æ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ–≥–æ –¥–ª—è –Ω–∞—á–∞–ª–∞.")
    else:
        print("EasyOCR –Ω–µ —Å–ø—Ä–∞–≤–∏–ª—Å—è. –†–µ–∫–æ–º–µ–Ω–¥—É—é –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–ª–∞—Ç–Ω—ã–µ API –¥–ª—è –ª—É—á—à–µ–π —Ç–æ—á–Ω–æ—Å—Ç–∏.")
    
    print("\n–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pip install easyocr opencv-python pillow matplotlib")
    print("2. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö —Å–∫—Ä–∏–Ω—à–æ—Ç–∞—Ö")
    print("3. –ï—Å–ª–∏ —Ç–æ—á–Ω–æ—Å—Ç—å –Ω–∏–∑–∫–∞—è - –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ –ø–ª–∞—Ç–Ω—ã–µ API") 