#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ —Ä–æ—Å—Å–∏–π—Å–∫–æ–≥–æ —Å—á–µ—Ç–∞
"""

import json
import os

def fix_rub_balance():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å —Ä–æ—Å—Å–∏–π—Å–∫–æ–≥–æ —Å—á–µ—Ç–∞"""
    
    if not os.path.exists('finance_data.json'):
        print("‚ùå –§–∞–π–ª finance_data.json –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    with open('finance_data.json', 'r', encoding='utf-8') as f:
        data = json.load(f)
    
    print("üìä –¢–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ:")
    print(f"   ‚Ä¢ –°—á–µ—Ç–æ–≤: {len(data.get('accounts', {}))}")
    print(f"   ‚Ä¢ –û–±—â–∏–π –±–∞–ª–∞–Ω—Å: ${data.get('total_balance_usd', 0):,.2f}")
    
    # –ò—â–µ–º —Ä–æ—Å—Å–∏–π—Å–∫–∏–π —Å—á–µ—Ç
    rub_account = None
    for account_id, account in data.get('accounts', {}).items():
        if account['currency'] == 'RUB':
            rub_account = account
            break
    
    if not rub_account:
        print("‚ùå –†–æ—Å—Å–∏–π—Å–∫–∏–π —Å—á–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    print(f"\nüá∑üá∫ –†–æ—Å—Å–∏–π—Å–∫–∏–π —Å—á–µ—Ç –Ω–∞–π–¥–µ–Ω:")
    print(f"   ‚Ä¢ ID: {account_id}")
    print(f"   ‚Ä¢ –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {rub_account['balance']:,.2f} RUB")
    print(f"   ‚Ä¢ –í –¥–æ–ª–ª–∞—Ä–∞—Ö: ${rub_account['balance_usd']:,.2f}")
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å: 25028830 -> 250288.30
    old_balance = rub_account['balance']
    new_balance = 250288.30  # –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å
    
    print(f"\nüîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å:")
    print(f"   ‚Ä¢ –ë—ã–ª–æ: {old_balance:,.2f} RUB")
    print(f"   ‚Ä¢ –°—Ç–∞–Ω–µ—Ç: {new_balance:,.2f} RUB")
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å
    rub_account['balance'] = new_balance
    
    # –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º –≤ –¥–æ–ª–ª–∞—Ä—ã (1 RUB = 0.011 USD)
    rub_account['balance_usd'] = new_balance * 0.011
    
    print(f"   ‚Ä¢ –ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å –≤ –¥–æ–ª–ª–∞—Ä–∞—Ö: ${rub_account['balance_usd']:,.2f}")
    
    # –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â–∏–π –±–∞–ª–∞–Ω—Å
    total_usd = 0
    for account in data['accounts'].values():
        total_usd += account['balance_usd']
    
    data['total_balance_usd'] = round(total_usd, 2)
    
    print(f"\nüí∞ –ù–æ–≤—ã–π –æ–±—â–∏–π –±–∞–ª–∞–Ω—Å: ${data['total_balance_usd']:,.2f}")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    with open('finance_data.json', 'w', encoding='utf-8') as f:
        json.dump(data, f, ensure_ascii=False, indent=2)
    
    print("\n‚úÖ –ë–∞–ª–∞–Ω—Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω!")
    
    return data

if __name__ == '__main__':
    fix_rub_balance() 